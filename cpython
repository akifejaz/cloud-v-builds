node('pioneer-1-admin') {
    stage('Clean Workspace') {
        cleanWs()
    }
    stage('Installing Dependencies') {
        sh '''#!/bin/bash
            export DEBIAN_FRONTEND=noninteractive
            sudo apt-get update
            sudo apt-get install -y build-essential gdb lcov pkg-config libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev lzma lzma-dev tk-dev uuid-dev zlib1g-dev
        '''
    }
    stage('Setting Directories and clone') {
        sh '''#!/bin/bash
            mkdir installed_binaries
            git clone --depth 1 https://github.com/python/cpython.git
        '''
    }
    stage('Run system_info') {
        sh '''#!/bin/bash
            echo '============================================================='
            echo '                       CPU INFO START                        '
            echo '============================================================='
            cat /proc/cpuinfo
            echo '============================================================='
            echo '                       CPU INFO END                          '
            echo '============================================================='
        '''
    }
    stage('Run configure') {
        sh '''#!/bin/bash -l
            set -x
            cd cpython
            ./configure --prefix=$(readlink -f ../installed_binaries)
        '''
    }
    stage('make') {
        sh '''#!/bin/bash -l
            set -x
            cd cpython || exit 1
            make -j32
            //make test
            make install
        '''
    }
    stage('Check Version') {
        sh '''#!/bin/bash -l
            set -x
            ./installed_binaries/bin/python3 --version
        '''
    }
    stage('Compress Binaries and transfer to Cloud') {
        sshagent(credentials: ['SSH_CLOUD_V_STORE_ID']){
            sh '''#!/bin/bash -l
            set -x
                export FILENAME="python_$(date -u +"%H%M%S_%d%m%Y").tar.gz"
                tar -cvf ./$FILENAME ./installed_binaries
                eval $(keychain --eval --agents ssh ~/.ssh/cloud-store-key)
                ssh cloud-store 'rm /var/www/nextcloud/data/admin/files/cloud-v-builds/Python/*' # Removing older builds
                scp $FILENAME cloud-store:/var/www/nextcloud/data/admin/files/cloud-v-builds/Python/
                ssh cloud-store 'sudo -u www-data php /var/www/nextcloud/occ files:scan --path="admin/files"'
            '''
        }
    }
}
